import java.util.Scanner;

public class Menu {

    private Scanner sc = new Scanner(System.in);
    private GameCore gameCore = new GameCore();
    private boolean programIsRunning = false;
    private boolean musicIsStarting = false;
    Music music = new Music("/battleship.wav");

    public void init() throws InterruptedException {
        if(!musicIsStarting) {
            music.play();
            musicIsStarting = true;

        for (int i = 0; i <= 4; i++) {
            System.out.println("\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n");
            loading();
            Thread.sleep(1500);
            }
        }

        while (!programIsRunning) {
            System.out.println("\u001b[33m ██╗              ██████╗ ██╗   ██╗██████╗                                    \n" +
                    "███║              ██╔══██╗██║   ██║██╔══██╗                                   \n" +
                    "╚██║    █████╗    ██████╔╝██║   ██║██████╔╝                                   \n" +
                    " ██║    ╚════╝    ██╔═══╝ ╚██╗ ██╔╝██╔═══╝                                    \n" +
                    " ██║              ██║      ╚████╔╝ ██║                                        \n" +
                    " ╚═╝              ╚═╝       ╚═══╝  ╚═╝                                        \n" +
                    "                                                                              \n" +
                    "██████╗               ██████╗ ██╗   ██╗ ██████╗                               \n" +
                    "╚════██╗              ██╔══██╗██║   ██║██╔════╝                               \n" +
                    " █████╔╝    █████╗    ██████╔╝██║   ██║██║                                    \n" +
                    "██╔═══╝     ╚════╝    ██╔═══╝ ╚██╗ ██╔╝██║                                    \n" +
                    "███████╗              ██║      ╚████╔╝ ╚██████╗                               \n" +
                    "╚══════╝              ╚═╝       ╚═══╝   ╚═════╝                               \n" +
                    "                                                                              \n" +
                    "██████╗                ██████╗ ██████╗ ████████╗██╗ ██████╗ ███╗   ██╗███████╗\n" +
                    "╚════██╗              ██╔═══██╗██╔══██╗╚══██╔══╝██║██╔═══██╗████╗  ██║██╔════╝\n" +
                    " █████╔╝    █████╗    ██║   ██║██████╔╝   ██║   ██║██║   ██║██╔██╗ ██║███████╗\n" +
                    " ╚═══██╗    ╚════╝    ██║   ██║██╔═══╝    ██║   ██║██║   ██║██║╚██╗██║╚════██║\n" +
                    "██████╔╝              ╚██████╔╝██║        ██║   ██║╚██████╔╝██║ ╚████║███████║\n" +
                    "╚═════╝                ╚═════╝ ╚═╝        ╚═╝   ╚═╝ ╚═════╝ ╚═╝  ╚═══╝╚══════╝\n" +
                    "                                                                              \n" +
                    "██╗  ██╗              ███████╗██╗  ██╗██╗████████╗                            \n" +
                    "██║  ██║              ██╔════╝╚██╗██╔╝██║╚══██╔══╝                            \n" +
                    "███████║    █████╗    █████╗   ╚███╔╝ ██║   ██║                               \n" +
                    "╚════██║    ╚════╝    ██╔══╝   ██╔██╗ ██║   ██║                               \n" +
                    "     ██║              ███████╗██╔╝ ██╗██║   ██║                               \n" +
                    "     ╚═╝              ╚══════╝╚═╝  ╚═╝╚═╝   ╚═╝  \u001b[0m");

            System.out.print("\u001b[33m-> \u001b[0m");

            switch (sc.next()) {
                case "1":
                    initPvp();
                    break;
                case "2":
                    gameCore.playPlayerVsComputer();
                    break;
                case "3":
                    options();
                    break;
                case "4":
                    music.stop();
                    programIsRunning = true;
                    Music exit = new Music("/scream.wav");
                    exit.play();
                    break;
                default:
                    Music donkey = new Music("/donkey.wav");
                    donkey.play();
                    System.out.println("Wrong option.");
                    break;
            }
        }
    }

    int count = 0;
    private void loading() {
        count++;
        if(count == 1) {
            System.out.println("\u001b[33m██       ██████   █████  ██████  ██ ███    ██  ██████  \n" +
                    "██      ██    ██ ██   ██ ██   ██ ██ ████   ██ ██       \n" +
                    "██      ██    ██ ███████ ██   ██ ██ ██ ██  ██ ██   ███ \n" +
                    "██      ██    ██ ██   ██ ██   ██ ██ ██  ██ ██ ██    ██ \n" +
                    "███████  ██████  ██   ██ ██████  ██ ██   ████  ██████  \u001b[0m");
        }

        if(count == 2) {
            System.out.println("\u001b[33m██       ██████   █████  ██████  ██ ███    ██  ██████     \n" +
                    "██      ██    ██ ██   ██ ██   ██ ██ ████   ██ ██          \n" +
                    "██      ██    ██ ███████ ██   ██ ██ ██ ██  ██ ██   ███    \n" +
                    "██      ██    ██ ██   ██ ██   ██ ██ ██  ██ ██ ██    ██    \n" +
                    "███████  ██████  ██   ██ ██████  ██ ██   ████  ██████  ██ \u001b[0m");
        }

        if(count == 3) {
            System.out.println("\u001b[33m██       ██████   █████  ██████  ██ ███    ██  ██████        \n" +
                    "██      ██    ██ ██   ██ ██   ██ ██ ████   ██ ██             \n" +
                    "██      ██    ██ ███████ ██   ██ ██ ██ ██  ██ ██   ███       \n" +
                    "██      ██    ██ ██   ██ ██   ██ ██ ██  ██ ██ ██    ██       \n" +
                    "███████  ██████  ██   ██ ██████  ██ ██   ████  ██████  ██ ██ \u001b[0m");
        }

        if(count == 4) {
            System.out.println("\u001b[33m██       ██████   █████  ██████  ██ ███    ██  ██████           \n" +
                    "██      ██    ██ ██   ██ ██   ██ ██ ████   ██ ██                \n" +
                    "██      ██    ██ ███████ ██   ██ ██ ██ ██  ██ ██   ███          \n" +
                    "██      ██    ██ ██   ██ ██   ██ ██ ██  ██ ██ ██    ██          \n" +
                    "███████  ██████  ██   ██ ██████  ██ ██   ████  ██████  ██ ██ ██ \u001b[0m");
        }

        if(count == 5) {
            System.out.println("\u001b[31m███████ ██   ██ ███████     ██████   █████  ████████ ████████ ██      ███████ ███████ ██   ██ ██ ██████  \n" +
                    "   ██    ██   ██ ██          ██   ██ ██   ██    ██       ██    ██      ██      ██      ██   ██ ██ ██   ██ \n" +
                    "   ██    ███████ █████       ██████  ███████    ██       ██    ██      █████   ███████ ███████ ██ ██████  \n" +
                    "   ██    ██   ██ ██          ██   ██ ██   ██    ██       ██    ██      ██           ██ ██   ██ ██ ██      \n" +
                    "   ██    ██   ██ ███████     ██████  ██   ██    ██       ██    ███████ ███████ ███████ ██   ██ ██ ██      \n" +
                    "                                                                                                          \u001b[0m");
        }
    }

    boolean isDisabled = false;

    private void options() throws InterruptedException {
        System.out.println("\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n");
        if(!isDisabled) {
            System.out.println("\u001b[33m██╗              ██████╗ ██╗███████╗ █████╗ ██████╗ ██╗     ███████╗    ███╗   ███╗██╗   ██╗███████╗██╗ ██████╗\n" +
                    "███║              ██╔══██╗██║██╔════╝██╔══██╗██╔══██╗██║     ██╔════╝    ████╗ ████║██║   ██║██╔════╝██║██╔════╝\n" +
                    "╚██║    █████╗    ██║  ██║██║███████╗███████║██████╔╝██║     █████╗      ██╔████╔██║██║   ██║███████╗██║██║     \n" +
                    " ██║    ╚════╝    ██║  ██║██║╚════██║██╔══██║██╔══██╗██║     ██╔══╝      ██║╚██╔╝██║██║   ██║╚════██║██║██║     \n" +
                    " ██║              ██████╔╝██║███████║██║  ██║██████╔╝███████╗███████╗    ██║ ╚═╝ ██║╚██████╔╝███████║██║╚██████╗\n" +
                    " ╚═╝              ╚═════╝ ╚═╝╚══════╝╚═╝  ╚═╝╚═════╝ ╚══════╝╚══════╝    ╚═╝     ╚═╝ ╚═════╝ ╚══════╝╚═╝ ╚═════╝\u001b[0m");
        } else {
            System.out.println("\u001b[33m██╗               █████╗  ██████╗████████╗██╗██╗   ██╗ █████╗ ████████╗███████╗    ███╗   ███╗██╗   ██╗███████╗██╗ ██████╗\n" +
                    "███║              ██╔══██╗██╔════╝╚══██╔══╝██║██║   ██║██╔══██╗╚══██╔══╝██╔════╝    ████╗ ████║██║   ██║██╔════╝██║██╔════╝\n" +
                    "╚██║    █████╗    ███████║██║        ██║   ██║██║   ██║███████║   ██║   █████╗      ██╔████╔██║██║   ██║███████╗██║██║     \n" +
                    " ██║    ╚════╝    ██╔══██║██║        ██║   ██║╚██╗ ██╔╝██╔══██║   ██║   ██╔══╝      ██║╚██╔╝██║██║   ██║╚════██║██║██║     \n" +
                    " ██║              ██║  ██║╚██████╗   ██║   ██║ ╚████╔╝ ██║  ██║   ██║   ███████╗    ██║ ╚═╝ ██║╚██████╔╝███████║██║╚██████╗\n" +
                    " ╚═╝              ╚═╝  ╚═╝ ╚═════╝   ╚═╝   ╚═╝  ╚═══╝  ╚═╝  ╚═╝   ╚═╝   ╚══════╝    ╚═╝     ╚═╝ ╚═════╝ ╚══════╝╚═╝ ╚═════╝\u001b[0m");
        }

        System.out.println("\u001b[33m██████╗               ██████╗  █████╗  ██████╗██╗  ██╗\n" +
                "╚════██╗              ██╔══██╗██╔══██╗██╔════╝██║ ██╔╝\n" +
                " █████╔╝    █████╗    ██████╔╝███████║██║     █████╔╝ \n" +
                "██╔═══╝     ╚════╝    ██╔══██╗██╔══██║██║     ██╔═██╗ \n" +
                "███████╗              ██████╔╝██║  ██║╚██████╗██║  ██╗\n" +
                "╚══════╝              ╚═════╝ ╚═╝  ╚═╝ ╚═════╝╚═╝  ╚═╝\n" +
                "                                                     \u001b[0m");

        System.out.print("\u001b[33m-> \u001b[0m");
        switch (sc.next()) {
            case "1":
                if(!isDisabled) {
                    music.pause();
                    isDisabled = true;
                    System.out.println("\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n");
                    break;
                } else

                if(isDisabled) {
                    music.unpause();
                    isDisabled = false;
                    System.out.println("\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n");
                    break;
                }
                break;
            case "2":
                System.out.println("\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n");
                init();
                break;
            default:
                Music donkey = new Music("/donkey.wav");
                donkey.play();
                System.out.println("Invalid option.");
                break;
        }
    }

    private void initPvp() throws InterruptedException {
        System.out.println("\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n");
        System.out.println("\u001b[33m██╗              ██████╗  █████╗ ███╗   ██╗██████╗  ██████╗ ███╗   ███╗    ███████╗██╗███████╗██╗     ██████╗ ███████╗    \n" +
                "███║              ██╔══██╗██╔══██╗████╗  ██║██╔══██╗██╔═══██╗████╗ ████║    ██╔════╝██║██╔════╝██║     ██╔══██╗██╔════╝    \n" +
                "╚██║    █████╗    ██████╔╝███████║██╔██╗ ██║██║  ██║██║   ██║██╔████╔██║    █████╗  ██║█████╗  ██║     ██║  ██║███████╗    \n" +
                " ██║    ╚════╝    ██╔══██╗██╔══██║██║╚██╗██║██║  ██║██║   ██║██║╚██╔╝██║    ██╔══╝  ██║██╔══╝  ██║     ██║  ██║╚════██║    \n" +
                " ██║              ██║  ██║██║  ██║██║ ╚████║██████╔╝╚██████╔╝██║ ╚═╝ ██║    ██║     ██║███████╗███████╗██████╔╝███████║    \n" +
                " ╚═╝              ╚═╝  ╚═╝╚═╝  ╚═╝╚═╝  ╚═══╝╚═════╝  ╚═════╝ ╚═╝     ╚═╝    ╚═╝     ╚═╝╚══════╝╚══════╝╚═════╝ ╚══════╝    \n" +
                "                                                                                                                           \n" +
                "██████╗               ███╗   ███╗ █████╗ ███╗   ██╗██╗   ██╗ █████╗ ██╗         ███████╗██╗███████╗██╗     ██████╗ ███████╗\n" +
                "╚════██╗              ████╗ ████║██╔══██╗████╗  ██║██║   ██║██╔══██╗██║         ██╔════╝██║██╔════╝██║     ██╔══██╗██╔════╝\n" +
                " █████╔╝    █████╗    ██╔████╔██║███████║██╔██╗ ██║██║   ██║███████║██║         █████╗  ██║█████╗  ██║     ██║  ██║███████╗\n" +
                "██╔═══╝     ╚════╝    ██║╚██╔╝██║██╔══██║██║╚██╗██║██║   ██║██╔══██║██║         ██╔══╝  ██║██╔══╝  ██║     ██║  ██║╚════██║\n" +
                "███████╗              ██║ ╚═╝ ██║██║  ██║██║ ╚████║╚██████╔╝██║  ██║███████╗    ██║     ██║███████╗███████╗██████╔╝███████║\n" +
                "╚══════╝              ╚═╝     ╚═╝╚═╝  ╚═╝╚═╝  ╚═══╝ ╚═════╝ ╚═╝  ╚═╝╚══════╝    ╚═╝     ╚═╝╚══════╝╚══════╝╚═════╝ ╚══════╝\n" +
                "                                                                                                                           \n" +
                "██████╗               ██████╗  █████╗  ██████╗██╗  ██╗                                                                     \n" +
                "╚════██╗              ██╔══██╗██╔══██╗██╔════╝██║ ██╔╝                                                                     \n" +
                " █████╔╝    █████╗    ██████╔╝███████║██║     █████╔╝                                                                      \n" +
                " ╚═══██╗    ╚════╝    ██╔══██╗██╔══██║██║     ██╔═██╗                                                                      \n" +
                "██████╔╝              ██████╔╝██║  ██║╚██████╗██║  ██╗                                                                     \n" +
                "╚═════╝               ╚═════╝ ╚═╝  ╚═╝ ╚═════╝╚═╝  ╚═╝  \u001b[0m");

        System.out.print("\u001b[33m-> \u001b[0m");

        switch (sc.next()) {
            case "1":
                System.out.println("\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n");
                gameCore.startPvpRandomMode();
                break;
            case "2":
                System.out.println("\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n");
                gameCore.startPvpManualMode();
                break;
            case "3":
                System.out.println("\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n");
                init();
                break;
            default:
                Music donkey = new Music("/donkey.wav");
                donkey.play();
                System.out.println("Invalid option.");
                break;
        }
    }
}
